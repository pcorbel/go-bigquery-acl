# First stage: builder
FROM library/golang:1.11.4-alpine as builder

RUN  mkdir -p /go/src \
     && mkdir -p /go/bin \
     && mkdir -p /go/pkg
RUN apk add --no-cache git 

ENV GOPATH=/go
ENV GO111MODULE=on
ENV PATH=${GOPATH}/bin:$PATH   

# Prepare module
WORKDIR ${GOPATH}/src/github.com/pcorbel/go-bigquery-acl

# Build
COPY cmd ${GOPATH}/src/github.com/pcorbel/go-bigquery-acl/cmd
COPY go.mod ${GOPATH}/src/github.com/pcorbel/go-bigquery-acl/go.mod
COPY go.sum ${GOPATH}/src/github.com/pcorbel/go-bigquery-acl/go.sum
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o go-bigquery-acl-amd64 cmd/*
RUN CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -a -installsuffix cgo -o go-bigquery-acl-arm32v6 cmd/*
RUN CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -a -installsuffix cgo -o go-bigquery-acl-arm64v8 cmd/*

# Final stage
FROM __BASEIMAGE_ARCH__/alpine:3.8

ENV GOOGLE_APPLICATION_CREDENTIALS=/tmp/application_default_credentials.json

RUN apk add --no-cache ca-certificates

WORKDIR /app
COPY --from=builder /go/src/github.com/pcorbel/go-bigquery-acl/go-bigquery-acl-__BASEIMAGE_ARCH__ /app/go-bigquery-acl

CMD ./go-bigquery-acl